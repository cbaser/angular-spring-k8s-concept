version: '3.8'

services:
  angular:
    build: angular
    restart: always
    container_name: angular
    ports:
      - "80:80"
    depends_on:
       gateway:
         condition: service_started
  mongo:
    image: mongo
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - $HOME/data/springboot-mongo-data:/data/db
      - $HOME/data/springboot-mongo-bkp:/data/bkp
    restart: on-failure
    healthcheck:
        test: echo 'db.runCommand({serverStatus:1}).ok'  grep 1
        interval: 10s
        timeout: 10s
        retries: 5
        start_period: 40s
  zookeeper:
    image: zookeeper:3.5.9
    container_name: zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: bitnami/kafka:3.2
    container_name: kafka
    restart: on-failure
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server 127.0.0.1:9092 --describe"]
      start_period: 15s
      interval: 30s
      timeout: 10s
      retries: 20
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    depends_on:
       zookeeper:
         condition: service_started
  eureka:
    build: eureka-registry
    container_name: eureka
    restart: on-failure
    ports:
      - "8761:8761"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://eureka:8761"]
      interval: 30s
      timeout: 10s
      retries: 20
  gateway:
    build: gateway
    container_name: gateway
    restart: on-failure
    ports:
      - "8080:8080"
    depends_on:
      car-micro-api:
         condition: service_started
      user-micro-api:
        condition: service_started
  auth-service:
    build: auth-service
    container_name: auth-service
    restart: on-failure
    depends_on:
      eureka:
        condition: service_healthy
  car-micro-api:
    build: car-micro-api
    restart: always
    container_name: car_api
    depends_on:
       eureka:
         condition: service_healthy
  car-micro-server:
    build: car-micro-server
    restart: on-failure
    container_name: car_server
    depends_on:
       mongo:
         condition: service_healthy
       kafka:
         condition: service_healthy
  user-micro-api:
    build: user-micro-api
    restart: always
    container_name: user_api
    depends_on:
       eureka:
         condition: service_healthy
  user-micro-server:
    build: user-micro-server
    restart: on-failure
    container_name: user_server
    depends_on:
       mongo:
         condition: service_healthy

